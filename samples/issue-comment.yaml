# This workflow will:
# 1. If issue comment begins with trigger word, then read feature flag from 2nd word.
#      Example: /experiment-analysis feature-flag-1
# 2. Analyze the experiment.
# 3. Post response comment with the analysis summary.
#
# Prerequisites:
# - Copy to a new GitHub Actions workflow file in the .github/workflows directory.
# - Update the environment variables for your setup.

name: Analyze Experiment (issue comment)

# Update for your setup
env:
  METRIC_TAGS_ORDER: "Important, Cost, Performance"

on:
  issue_comment:
    types: [created]

jobs:
  analysis:
    name: Experiment Analysis
    if: ${{ startsWith(github.event.comment.body, '/experiment-analysis') }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      issues: write
    steps:
      - name: Azure login using Federated Credentials
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Parse feature flag from issue comment
        id: parse
        shell: python
        run: |
          import os
          feature_flag = os.getenv("COMMENT").split()[1]
          with open(os.getenv("GITHUB_OUTPUT"), "a", encoding="utf-8") as f:
              f.write(f"feature-flag={feature_flag}\n")
        env:
          COMMENT: ${{ github.event.comment.body }}

      - name: Summarize analysis results
        id: results
        uses: azure/online-experimentation-analysis@v1-beta
        with:
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          resource-group: ${{ vars.LOG_ANALYTICS_WORKSPACE_RESOURCE_GROUP }}
          log-analytics-workspace: ${{ vars.LOG_ANALYTICS_WORKSPACE_NAME }}
          app-configuration-feature-flag: ${{ steps.parse.outputs.feature-flag }}
          metric-tags-order: ${{ env.METRIC_TAGS_ORDER }}

      - name: Comment on issue
        run: gh issue comment "$NUMBER" --body "$BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          BODY: ${{ steps.results.outputs.summary-md }}
